@model Zamdau.Models.Product

<div class="container mt-5">
    <h2>New Product Listing</h2>
    <form asp-action="CreateProduct" asp-controller="Seller" method="post" enctype="multipart/form-data">
        <!-- Name -->
        <div class="mb-3">
            <label for="Name" class="form-label">Product Name</label>
            <input type="text" class="form-control" id="Name" name="Name" required autocomplete="off" placeholder="Enter product name">
        </div>

        <!-- Brand, Price, and Quantity in the same row -->
        <div class="row g-3 mb-3">
            <!-- Brand -->
            <div class="col-md-4">
                <label for="Brand" class="form-label">Brand</label>
                <input type="text" class="form-control" id="Brand" name="Brand" placeholder="Enter brand (optional)">
            </div>
            <!-- Price -->
            <div class="col-md-4">
                <label for="Price" class="form-label">Price ($)</label>
                @*<input type="text" class="form-control" id="Price" name="Price" autocomplete="off" placeholder="Enter price" onchange="MascaraMoeda(this)" onkeypress="return event.charCode >= 48 && event.charCode <= 57,MascaraMoeda(this)">
                *@ <input type="text" class="form-control" id="Price" name="Price" autocomplete="off" placeholder="Enter price">
            </div>
            <!-- Quantity -->
            <div class="col-md-4">
                <label for="Quantity" class="form-label">Quantity</label>
                <input type="number" class="form-control" id="Quantity" name="Quantity" required placeholder="Enter available quantity">
            </div>
        </div>

        <!-- Description and Image -->
        <div class="row g-3 align-items-start mb-3">
            <!-- Description -->
            <div class="col-md-8">
                <label for="Description" class="form-label">Description</label>
                <textarea class="form-control" id="Description" name="Description" rows="4" placeholder="Provide a detailed description (optional)"></textarea>

                <!-- Image Upload -->
                <div class="mt-3">
                    <label for="ImageUrl" class="form-label">Product Image</label>
                    <input type="file" class="form-control" id="ImageUrl" name="ImageUrl" accept="image/*" onchange="previewImage(event)">
                </div>
            </div>

            <!-- Image Preview -->
            <div class="col-md-4 text-center">
                <div><label for="ImageUrl" class="form-label">Preview image</label></div>
                <div>
                    <img id="preview" alt="Profile Preview" src="https://png.pngtree.com/png-vector/20221125/ourmid/pngtree-no-image-available-icon-flatvector-illustration-pic-design-profile-vector-png-image_40966566.jpg" class="border rounded card-img-top" style="max-width: 250px; max-height: 250px;">
                </div>


            </div>
        </div>

        <!-- Specifications -->
        <div class="mb-3">
            <label class="form-label">Specifications</label>
            <div id="specifications-container">
                <div class="row g-2 mb-2">
                    <div class="col-md-5">
                        <input type="text" class="form-control" name="Specifications[0].Name" placeholder="Specification name (e.g., Size)" />
                    </div>
                    <div class="col-md-5">
                        <input type="text" class="form-control" name="Specifications[0].Value" placeholder="Specification value (e.g., Medium)" />
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-danger remove-specification">Remove</button>
                    </div>
                </div>
            </div>
            <button type="button" id="add-specification" class="btn btn-sm btn-secondary">Add Specification</button>
        </div>

        <!-- Submit Button -->
        <button type="submit" class="btn btn-orange">Submit Product</button>
    </form>
</div>


<script>
    const priceInput = document.getElementById('Price');

    priceInput.addEventListener('input', (event) => {
        let value = event.target.value.replace(/\D/g, ''); // Remove caracteres não numéricos

        if (value.length === 0) {
            event.target.value = ''; // Se o campo estiver vazio, não formata
            return;
        }

        // Insere automaticamente o ponto decimal
        const numericValue = parseFloat(value) / 100;
        event.target.value = numericValue.toLocaleString('en-US', {
            style: 'decimal',
            minimumFractionDigits: 2,
            maximumFractionDigits: 2,
        });
    });
</script>

@section Scripts {
    <script>
        let specCount = 1;

        document.getElementById('add-specification').addEventListener('click', function () {
            const container = document.getElementById('specifications-container');
            const row = document.createElement('div');
            row.classList.add('row', 'g-2', 'mb-2');
            row.innerHTML = `
                                        <div class="col-md-5">
                                            <input type="text" class="form-control" name="Specifications[${specCount}].Name" placeholder="Specification name" />
                                        </div>
                                        <div class="col-md-5">
                                            <input type="text" class="form-control" name="Specifications[${specCount}].Value" placeholder="Specification value" />
                                        </div>
                                        <div class="col-md-2">
                                            <button type="button" class="btn btn-danger remove-specification">Remove</button>
                                        </div>
                                    `;
            container.appendChild(row);
            specCount++;
        });

        document.getElementById('specifications-container').addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-specification')) {
                e.target.closest('.row').remove();
            }
        });


    </script>
}
<script>

    function previewImage(event) {
        const input = event.target;
        const preview = document.getElementById('preview');

        if (input.files && input.files[0]) {
            const reader = new FileReader();

            reader.onload = function (e) {
                preview.src = e.target.result; // Define a URL da imagem carregada no elemento <img>
            };

            reader.readAsDataURL(input.files[0]); // Lê o arquivo como Data URL
        }
    }
</script>