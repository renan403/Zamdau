@model Product

@{
    ViewBag.Title = Model.Name;
}

<div class="container">

    <div class="">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb p-3 rounded-3">
                <li class="breadcrumb-item">
                    <a asp-action="Index" asp-controller="Home"  class="text-decoration-none link-orange">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-house" viewBox="0 0 16 16">
                            <path d="M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L2 8.207V13.5A1.5 1.5 0 0 0 3.5 15h9a1.5 1.5 0 0 0 1.5-1.5V8.207l.646.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293zM13 7.207V13.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V7.207l5-5z" />
                        </svg>
                        Home
                    </a>
                </li>
                <li class="breadcrumb-item">
                    <a asp-action="Products" asp-controller="Product" class="text-decoration-none link-orange ">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-cart3" viewBox="0 0 16 16">
                            <path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .49.598l-1 5a.5.5 0 0 1-.465.401l-9.397.472L4.415 11H13a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5M3.102 4l.84 4.479 9.144-.459L13.89 4zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4m7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2m7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2" />
                        </svg>
                        Products
                    </a>
                </li>
                <li class="breadcrumb-item ">
                    <a class="text-decoration-none link-light ">
                        
                        @Model.Name
                    </a>
                </li>
            </ol>
        </nav>
    </div>

<div class="product-container  m-auto my-5 m-3 ">
    <div class="row">
        <!-- Product Image -->
        <div class="col-md-6 bg-opacity-25  rounded mt-1">
                <img src="@Model.ImageUrl" alt="Product" class=" img-product rounded">
        </div>

        <!-- Product Information -->
        <div class="col-md-6  mt-1 ">
            <h2>@Model.Name</h2>

            <!-- Stock Warning Message -->
            @if (Model.Quantity == 0)
            {
                <div class="alert alert-danger">
                    Attention: No more units in stock!
                </div>
            }
            else if (Model.Quantity < 3)
            {
                <div class="alert alert-warning">
                    Attention: Only <strong>@Model.Quantity</strong> units left in stock!
                </div>
            }

            <!-- Manufacturer, Type, and Availability -->
                <ul class="list-group list-group-flush text-light mb-3 border-light border border-rounded-10">
                    <li class="list-group-item text-light bg-dark ">
                        @if(Model.Quantity > 0)
                        {
                            <strong>Availability :</strong> <span>In Stock</span>
                        }
                        else
                        {
                            <strong>Availability :</strong> <span>Out of Stock</span>
                        }

                </li>
                    <li class="list-group-item bg-dark text-light">
                        <strong>Rating:</strong> @for (var j = 0; j < 5; j++)
                        {
                            if (j < Model.Rating)
                            {
                                <span class="starComment">&#9733;</span> <!-- Estrela cheia -->
                            }
                            else
                            {
                                <span class="starComment text-light">&#9734;</span> <!-- Estrela vazia -->
                            }
                        } (@Model.Rating out of 5)
                    </li>
                    <li class="list-group-item bg-dark text-light">
                        <strong>Reviews:</strong> @Model.ReviewCount
                    </li>
                    <li class="list-group-item text-light bg-dark text-light ">


                        <!-- Select Quantity -->
                        <div class="mb-3">
                            <label for="quantitySelect" class="form-label">Quantity:</label>
                            <select name="Quantity" id="quantitySelect" class="form-select-sm d-inline-block w-auto bg-dark text-light border-light" required>
                                <option value="" selected>Select</option>
                                @for (int i = 1; i <= (Model.Quantity > 5 ? 5 : Model.Quantity); i++)
                                {
                                    <option value="@i">@i</option>
                                }
                            </select>
                        </div>

                        <!-- Buttons -->
                        <div class="d-flex gap-2">
                            <!-- Formulário para Adicionar ao Carrinho -->                         
                            <button class="btn btn-sm btn-secondary btn-lg w-100" onclick="addToCart('@Model.Id')">
                                Add to Cart
                            </button>

                            <!-- Formulário para Comprar Agora -->
                            @using (Html.BeginForm("BuyNow", "User", FormMethod.Get, new { @class = "w-100" }))
                            {
                                <input type="hidden" name="ProductId" value="@Model.Id" />
                                <input type="hidden" name="Quantity" id="buyNowQuantity" />
                                <button type="submit" onclick="funcBuyNow()" class="btn btn-sm btn-success btn-lg w-100">Buy Now</button>
                            }
                        </div>
                </li>
            </ul>

            <!-- Technical Specifications -->
                <div class="mb-3 text-light ">
                <h4>Technical Specifications</h4>
                    <ul class="list-group list-group-flush border-light border border-rounded-10">
                            @foreach (var spec in Model.Specifications)
                            {
                                <li class="list-group-item bg-dark text-light">
                                    <strong>@spec.Name :</strong> @spec.Value
                                </li>
                            }
                        </ul>
            </div>


            <!-- Description -->
            <div class="my-3">
                <h4>Description</h4>
                <h6>@Model.Description</h6>
            </div>


        </div>
    </div>
        <div id="alert-box" class="custom-alert-addcart">Produto adicionado ao carrinho!</div>    <!-- Customer Reviews Section -->
    <div class="row mt-5">
        <div class="col-12 ">
            <h4>Customer Reviews</h4>
            <div class="list-group">
 
                    @if(Model.Comments.Count > 0)
                    {
                        foreach (var i in Model.Comments.Values)
                        {
                            <div class="list-group-item bg-dark text-light border-light">
                                <h5 class="mb-1 text-capitalize">@i.Author</h5>
                                <p>@for (var j = 0; j < 5; j++)
                                    {
                                        if (j < i.Rating)
                                        {
                                            <span class="starComment">&#9733;</span> <!-- Estrela cheia -->
                                        }
                                        else
                                        {
                                            <span class="starComment text-light">&#9734;</span> <!-- Estrela vazia -->
                                        }
                                    } &ensp; @i.Text</p>
                                <small class="text-secondary">Review date: @i.DatePosted.ToString("U")</small>
                            </div>
                        }

                    }
                    else
                    {
                        <h5 class="alert text-center py-2 px-3 mb-2 d-inline-block">
                            No Comments
                        </h5>
                    }
                    <!-- Example Reviews -->
                  @* <div class="list-group-item bg-dark text-light border-light">
                    <h5 class="mb-1">User 1</h5>
                    <p>⭐⭐⭐⭐⭐ - Excellent product! It met all my expectations.</p>
                    <small class="text-secondary">Review date: 10/01/2024</small>
                </div>
                    <div class="list-group-item bg-dark text-light border-light">
                    <h5 class="mb-1">User 2</h5>
                    <p>⭐⭐⭐☆☆ - Good product, but could have better quality in the details.</p>
                    <small class="text-secondary">Review date: 09/25/2024</small>
                    </div>*@
                    <!-- Add more reviews as needed -->
            </div>
        </div>
    </div>
</div>
</div>

<script>
    function showAlertAddCart(message) {
        const alertBox = document.getElementById('alert-box');

        // Atualiza a mensagem do alerta, se necessário
        alertBox.textContent = message;

        // Adiciona a classe para exibir o alerta
        alertBox.classList.add('show');

        // Remove o alerta após 3 segundos
        setTimeout(() => {
            alertBox.classList.remove('show');
        }, 3000);
    }
    function funcBuyNow() {
        var selectedQuantity = document.getElementById('quantitySelect').value;
        document.getElementById('buyNowQuantity').value = selectedQuantity;
    }
    function addToCart(productId) {

        var selectedQuantity = document.getElementById('quantitySelect').value;
     
        $.ajax({
            url: '@Url.Action("AddToCart", "User")',  // URL da ação AddToCart
            type: 'POST',  // Método POST
            data: { ProductId: productId, Quantity: selectedQuantity },  // Dados a serem enviados
            success: function (response) {
                showAlertAddCart("Product added to cart!");
            },
            error: function (xhr, status, error) {
                // Capturando o erro detalhado
                console.log("error ")
                console.error("Error adding to cart:", error);
                console.error("Status:", status);
                console.error("Error details:", xhr.responseText);

                // Se o status for 401 (não autorizado), redireciona para a página de login
                if (xhr.status === 401) {
                    console.log("error 401")
                    window.location.href = '/Buyer/Login?ReturnUrl=' + encodeURIComponent('/User/AddToCart?productId=' + productId + '&Quantity=' + selectedQuantity);  // Redireciona para o login
                } else {
                    showAlertAddCart("An error occurred while adding the product to the cart. Please try again later..");
                }
            }
        });
    }


    // Atualizar os campos ocultos nos formulários com a quantidade selecionada
    document.getElementById('quantitySelect').addEventListener('change', function () {
        const selectedQuantity = this.value;       
        document.getElementById('addToCartQuantity').value = selectedQuantity;
        document.getElementById('buyNowQuantity').value = selectedQuantity;
    });

    // Garantir que o valor padrão seja atualizado ao carregar a página
    document.addEventListener('DOMContentLoaded', function () {
        const quantitySelect = document.getElementById('quantitySelect');
        const defaultQuantity = quantitySelect.value || 1;
        quantitySelect.value = defaultQuantity;
        document.getElementById('addToCartQuantity').value = defaultQuantity;
        document.getElementById('buyNowQuantity').value = defaultQuantity;
    });
</script>