<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Perfil de Usuário</title>
    <style>
        .profile-container {
            max-width: 600px;
            margin: 50px auto;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .profile-header {
            text-align: center;
            margin-bottom: 20px;
        }

            .profile-header img {
                width: 100px;
                height: 100px;
                border-radius: 50%;
                object-fit: cover;
                margin-bottom: 15px;
            }

        .edit-button {
            text-align: right;
        }

        .error-message {
            color: red;
            font-size: 0.875em;
            display: none;
        }

        .profile-info {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>

    <div class="container profile-container">
        <div class="profile-header">
            <img src="https://via.placeholder.com/100" alt="User Image" class="img-fluid">
            <h2 class="mt-3">User Name</h2>
        </div>

        <div class="profile-info">
            <div class="mb-3">
                <div class="d-flex">
                    <label class="form-label fw-bolder me-1 py-1 w-25">Nome:</label>
                    <p id="name" class="py-1 ">John Doe</p>
                </div>
                <div id="nameError" class="error-message">O nome não pode conter números e deve ter no máximo 70 caracteres.</div>
            </div>

            <div class="mb-3">
                <div class="d-flex">
                    <label class="form-label fw-bolder py-1 me-1 w-25">Idade:</label>
                    <p id="age" class="py-1 ">28</p>
                </div>
                <div id="ageError" class="error-message">A idade deve estar entre 18 e 100.</div>
            </div>

            <div class="mb-3">
                <div class="d-flex">
                    <label class="form-label fw-bolder me-1 py-1 w-25">Gênero:</label>
                    <p id="gender" class=" py-1">Masculino</p>
                </div>
            </div>

            <div class="mb-3">
                <div class="d-flex">
                    <label class="form-label fw-bolder me-1 py-1 w-25">Código de País:</label>
                    <p id="countryCode" class="py-1">+55</p>
                </div>
            </div>

            <div class="mb-3">
                <div class="d-flex">
                    <label class="form-label fw-bolder me-1 py-1 w-25">Email:</label>
                    <p id="email" class="py-1">john.doe@email.com</p>
                </div>
                <div id="emailError" class="error-message">Insira um email válido.</div>
            </div>

            <div class="mb-3">
                <div class="d-flex">
                    <label class="form-label fw-bolder me-1 py-1 w-25">Telefone:</label>
                    <p id="phone" class="py-1 ">(11) 11111-1111</p>
                </div>

                <div id="phoneError" class="error-message">Insira um telefone válido no formato (DDD) DDD-DDDD.</div>
            </div>
        </div>

        <div class="edit-button d-flex justify-content-end gap-2">
            <button id="editButton" class="btn btn-primary">Editar</button>
            <button id="saveButton" class="btn btn-success d-none">Salvar</button>
            <button id="cancelButton" class="btn btn-secondary d-none">Cancelar</button>
        </div>
    </div>

    <script>
        const editButton = document.getElementById('editButton');
        const saveButton = document.getElementById('saveButton');
        const cancelButton = document.getElementById('cancelButton');
        const phoneField = document.getElementById('phone');
        const genderField = document.getElementById('gender');
        const countryCodeField = document.getElementById('countryCode');
        const genderSelect = document.createElement('select');
        const countryCodeSelect = document.createElement('select');

        genderSelect.classList.add('form-select');
        genderSelect.innerHTML = `
                      <option value="Masculino">Masculino</option>
                      <option value="Feminino">Feminino</option>
                      <option value="Outro">Outro</option>
                    `;

        countryCodeSelect.classList.add('form-select');
        countryCodeSelect.innerHTML = `
                      <option value="+55">+55 (Brasil)</option>
                      <option value="+1">+1 (EUA/Canadá)</option>
                      <option value="+44">+44 (Reino Unido)</option>
                      <option value="+33">+33 (França)</option>
                      <option value="+49">+49 (Alemanha)</option>
                      <!-- Adicione mais países conforme necessário -->
                    `;

        editButton.addEventListener('click', () => {
            toggleEditMode(true);
        });

        cancelButton.addEventListener('click', () => {
            toggleEditMode(false);

            // Esconde as mensagens de erro ao cancelar
            const errorMessages = document.querySelectorAll('.error-message');
            errorMessages.forEach(error => {
                error.style.display = 'none';
            });
        });

        saveButton.addEventListener('click', () => {
            const nameInput = document.getElementById('name');
            const emailInput = document.getElementById('email');
            const phoneInput = document.getElementById('phone');
            const ageInput = document.getElementById('age');
            const nameError = document.getElementById('nameError');
            const emailError = document.getElementById('emailError');
            const phoneError = document.getElementById('phoneError');
            const ageError = document.getElementById('ageError');

            let isValid = true;

            // Validação do nome (sem números e no máximo 70 caracteres)
            if (!validateName(nameInput.value)) {
                nameError.style.display = 'block';
                isValid = false;
            } else {
                nameError.style.display = 'none';
            }

            // Validação do email
            if (!validateEmail(emailInput.value)) {
                emailError.style.display = 'block';
                isValid = false;
            } else {
                emailError.style.display = 'none';
            }

            // Validação do telefone
            if (!validatePhone(phoneInput.value)) {
                phoneError.style.display = 'block';
                isValid = false;
            } else {
                phoneError.style.display = 'none';
            }

            // Validação da idade
            if (!validateAge(ageInput.value)) {
                ageError.style.display = 'block';
                isValid = false;
            } else {
                ageError.style.display = 'none';
            }

            if (isValid) {
                toggleEditMode(false);
            }
        });

        function toggleEditMode(editMode) {
            const fields = ['name', 'email'];
            const ageField = document.getElementById('age');
            const phoneField = document.getElementById('phone');
            const genderField = document.getElementById('gender');
            const countryCodeField = document.getElementById('countryCode');

            // Muda os campos de texto para campos de edição
            fields.forEach(field => {
                const p = document.getElementById(field);
                if (editMode) {
                    const input = document.createElement('input');
                    input.type = 'text';
                    input.className = 'form-control mb-2';
                    input.autocomplete = 'true';
                    input.value = p.textContent;
                    input.id = field;
                    p.replaceWith(input);
                } else {
                    const value = document.getElementById(field).value;
                    const newP = document.createElement('p');
                    newP.id = field;
                    newP.textContent = value;
                    newP.className = 'form-control-plaintext';
                    document.getElementById(field).replaceWith(newP);
                }
            });

            // Campo de idade com limite
            if (editMode) {
                const ageInput = document.createElement('input');
                ageInput.type = 'text';
                ageInput.className = 'form-control mb-2';
                ageInput.autocomplete = 'true';
                ageInput.value = ageField.textContent;
                ageInput.id = 'age';
                ageInput.maxLength = 3;
                ageInput.addEventListener('input', validateAgeInput);
                ageField.replaceWith(ageInput);
            } else {
                const ageValue = document.getElementById('age').value;
                const newAgeP = document.createElement('p');
                newAgeP.id = 'age';
                newAgeP.textContent = ageValue;
                newAgeP.className = 'form-control-plaintext';
                document.getElementById('age').replaceWith(newAgeP);
            }

            // Campo de telefone com máscara
            if (editMode) {
                const phoneInput = document.createElement('input');
                phoneInput.type = 'text';
                phoneInput.className = 'form-control mb-2';
                phoneInput.autocomplete = 'true';
                phoneInput.value = phoneField.textContent;
                phoneInput.id = 'phone';
                phoneInput.addEventListener('input', formatPhone);
                phoneField.replaceWith(phoneInput);
            } else {
                const phoneValue = document.getElementById('phone').value;
                const newPhoneP = document.createElement('p');
                newPhoneP.id = 'phone';
                newPhoneP.textContent = phoneValue;
                newPhoneP.className = '';
                phoneField.replaceWith(newPhoneP);
            }

            // Código de gênero
            if (editMode) {
                genderField.replaceWith(genderSelect);
            } else {
                const genderValue = genderSelect.value;
                const newGenderP = document.createElement('p');
                newGenderP.id = 'gender';
                newGenderP.textContent = genderValue;
                newGenderP.className = 'form-control-plaintext';
                genderSelect.replaceWith(newGenderP);
            }

            // Código de país
            if (editMode) {
                countryCodeField.replaceWith(countryCodeSelect);
            } else {
                const countryCodeValue = countryCodeSelect.value;
                const newCountryCodeP = document.createElement('p');
                newCountryCodeP.id = 'countryCode';
                newCountryCodeP.textContent = countryCodeValue;
                newCountryCodeP.className = 'form-control-plaintext';
                countryCodeSelect.replaceWith(newCountryCodeP);
            }

            // Alterna os botões
            editButton.classList.toggle('d-none', editMode);
            saveButton.classList.toggle('d-none', !editMode);
            cancelButton.classList.toggle('d-none', !editMode);
        }

        function validateEmail(email) {
            const re = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
            return re.test(email);
        }

        function validatePhone(phone) {
            const re = /^\(\d{2}\) \d{5}-\d{4}$/;
            return re.test(phone);
        }

        function validateAge(age) {
            return age >= 18 && age <= 100;
        }

        function validateAgeInput(event) {
            const value = event.target.value;
            if (value < 18 || value > 100) {
                event.target.setCustomValidity('Age must be between 18 and 100');
            } else {
                event.target.setCustomValidity('');
            }
        }


        function formatPhone(event) {
            let value = event.target.value.replace(/\D/g, '');
            if (value.length <= 2) {
                event.target.value = '(' + value;
            } else if (value.length <= 7) {
                event.target.value = '(' + value.slice(0, 2) + ') ' + value.slice(2);
            } else {
                event.target.value = '(' + value.slice(0, 2) + ') ' + value.slice(2, 7) + '-' + value.slice(7, 11);
            }
        }

        function validateName(name) {
            const nameRegex = /^[a-zA-Z\s]{1,70}$/;
            return nameRegex.test(name);
        }
    </script>

</body>
</html>
